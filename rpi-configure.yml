---
# rpi_configure.yml :   Playbook for configuring freshly-booted Raspberry Pis

- hosts: rpi
  remote_user: pi
  become: yes

  vars:
    # Packages to be installed
    packages:
        - vim-common        # Vim Text Editor
        - tmux              # Terminal Multiplexer
        - elinks            # CLI-based browser
        - network-manager   # Network management
        - libnm-glib-dev    # Needed for managing networking using Ansible
        - dbus              # Needed for managing networking using Ansible   
        - python-dbus       # Needed by 'nmcli' module of Ansible

    # SSH keys to be added
    ssh_keys:
        - /Users/harshavardhanj/.ssh/keychain/rpi_key.pub

    # NetworkManager ethernet interface information
    nmcli_eth:
        - conn_name: '{{ eth_laptop_name }}'
          type: ethernet
          ifname: eth0
          ip4: '{{ eth_laptop_ip }}'
          gw4: '{{ eth_laptop_gw }}'
          
        - conn_name: '{{ eth_router_name }}'
          type: ethernet
          ifname: eth0
          ip4: '{{ eth_router_ip }}'
          gw4: '{{ eth_laptop_gw }}'

    # NetworkManager wireless interface information
    nmcli_wlan:
        - conn_name: '{{ wlan_name }}'
          ifname: wlan0
          ip4: '{{ wlan_ip }}'
          gw4: '{{ wlan_gw }}'
          dns: '{{ wlan_dns }}'
          ssid: "Office"
          psk: "eme@1363"

    eth_router_name: "WiredRouterConn"
    eth_router_ip: "192.168.1.51/24"
    eth_router_gw: "192.168.1.1"

    eth_laptop_name: "WiredLaptopConn"
    eth_laptop_ip: "192.168.2.10/24"
    eth_laptop_gw: "192.168.2.1"

    wlan_name: "WiFiConn"
    wlan_ip: "192.168.1.51/24"
    wlan_gw: "192.168.1.1"
    wlan_dns: "8.8.8.8 8.8.4.4"


  tasks:
    # Update all packages and repositories
    - name: Update all packages
      apt:
          name: "*"
          state: latest
          update_cache: yes

    # Install packages given in 'vars'
    - name: Install "{{ packages }}"
      apt:
          name: "{{ packages }}"
          state: latest
          update_cache: yes

    # Cleanup after updating and installation of packages
    - name: Remove useless packages from cache
      apt:
          autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
          autoremove: yes

    # Copy given SSH keys to user's 'authorized keys' file
    #    - name: Copy SSH keys
    #      authorized_key:
    #          user: pi
    #          state: present
    #          key: "{{ ssh_keys }}"
    #
    # Set up Wired Networking
    - name: Set up Wired(Ethernet) Connection
      nmcli:
          type: '{{ item.type }}'
          conn_name: '{{ item.conn_name }}'
          ip4: '{{ item.ip4 }}'
          gw4: '{{ item.gw4 }}'
          state: present
          autoconnect: yes
      with_items:
          - "{{ nmcli_eth }}"

     # Set up Wireless Networking
    - name: Set up Wireless(WiFi) Connection
      blockinfile:
          path: /etc/wpa_supplicant/wpa_supplicant.conf
          backup: yes
          block: |
              ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
              update_config=1

    - name: Set up Wireless(WiFi) Connection
      blockinfile:
          path: /etc/wpa_supplicant/wpa_supplicant.conf
          backup: yes
          block: |
              network={
              ssid={{ item.ssid }}
              psk={{ item.psk }}
              proto=RSN
              key_mgmt=WPA-PSK
              pairwise=CCMP
              auth_alg=OPEN
              }
      with_items:
          - '{{ nmcli_wlan }}'


    - name: nmcli wifi setup
      command: nmcli device wifi connect '{{ item.ssid }}' name '{{ item.conn_name }}' ifname '{{ item.ifname }}' password "{{ item.psk }}"
      with_items:
          - '{{ nmcli_wlan }}'
      register: wifi_add

    - name: nmcli wifi ip address
      shell: nmcli con mod '{{ item.conn_name }}' ipv4.addresses '{{ item.ip4 }}' ipv4.gateway '{{ item.gw4 }}' ipv4.dns '{{ item.dns }}' connection.autoconnect yes && nmcli con up '{{ item.conn_name }}'
      with_items:
          - '{{ nmcli_wlan }}'
